import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.3/userguide/building_java_projects.html
 */

plugins {
    kotlin("jvm") version "1.9.21" // Kotlin version to use

    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
    // Align versions of all Kotlin components
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))

    // Use the Kotlin JDK 8 standard library.
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    implementation("info.picocli:picocli:4.6.1")

    implementation("com.github.h0tk3y.betterParse:better-parse:0.4.2")

    implementation("com.beust:klaxon:5.5")

    implementation("com.google.guava:guava:31.0-jre")

    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0")

    implementation("com.varabyte.kotter:kotter-jvm:1.1.1")

    // Use the Kotlin test library.
    testImplementation("org.jetbrains.kotlin:kotlin-test")

    // Use the Kotlin JUnit integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")
}

application {
    // Define the main class for the application.
    mainClass.set("kotlinadventofcode.AppKt")
    applicationName = "ka"
    applicationDefaultJvmArgs = listOf("-Xms512m", "-Xmx32g")
}

tasks.test {
    maxHeapSize = "32G"
    maxParallelForks = Runtime.getRuntime().availableProcessors()
}

tasks.withType<Test> {
    this.testLogging {
        this.showStandardStreams = true
    }
}

tasks.withType<KotlinCompile> {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.freeCompilerArgs = listOf("-Xcontext-receivers")
}

// Install ka CLI in app/build/install/ka
tasks.build { finalizedBy(tasks.installDist) }
