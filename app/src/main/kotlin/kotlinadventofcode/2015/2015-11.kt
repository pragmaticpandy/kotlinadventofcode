// Originally generated by the template in CodeDAO
package kotlinadventofcode.`2015`

import kotlinadventofcode.Day

class `2015-11` : Day {

    @OptIn(ExperimentalStdlibApi::class) fun increment(input: String): String {
        val inputWithoutLastChar = input.substring(0, input.length - 1)
        return if (input[input.length - 1] == 'z') increment(inputWithoutLastChar) + 'a'
            else inputWithoutLastChar + Char(input.last().toInt() + 1)
    }

    fun hasStraight(input: String): Boolean {
        for (i in 0..input.length - 3) {
            if (input[i].toInt() == input[i + 1].toInt() - 1 &&
                input[i].toInt() == input[i + 2].toInt() - 2)
                    return true
        }

        return false
    }

    fun hasNoBadChars(input: String): Boolean {
        return "i" !in input && "o" !in input && "l" !in input
    }

    fun hasPairs(input: String, numPairs: Int): Boolean {
        if (numPairs == 0) return true

        for (i in 0..input.length - 2) {
            if (input[i] == input[i + 1] &&
                (hasPairs(input.substring(0, i), numPairs - 1)
                    || hasPairs(input.substring(i + 2, input.length), numPairs - 1))) return true
        }

        return false
    }

    /**
     * After verifying your solution on the AoC site, run `./ka continue` to add a test for it.
     */
    override tailrec fun runPart1(input: String): String {
        val incremented = increment(input)
        return if (hasStraight(incremented) && hasNoBadChars(incremented) && hasPairs(incremented, 2)) incremented
            else runPart1(incremented)
    }

    /**
     * After verifying your solution on the AoC site, run `./ka continue` to add a test for it.
     */
    override fun runPart2(input: String): String {
        return runPart1(runPart1(input))
    }

    override val defaultInput = """hepxcrrq"""
}